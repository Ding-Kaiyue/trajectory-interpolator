name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libgtest-dev libgmock-dev
        
        # Install ROS2 Humble dependencies
        sudo apt-get install -y software-properties-common
        sudo add-apt-repository universe
        sudo apt-get update && sudo apt-get install -y curl gnupg2 lsb-release
        sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
        sudo apt-get update
        sudo apt-get install -y ros-humble-ament-cmake ros-humble-rclcpp ros-humble-trajectory-msgs ros-humble-moveit-msgs ros-humble-builtin-interfaces

    - name: Build library (ROS2 enabled)
      run: |
        mkdir build-ros2
        cd build-ros2
        source /opt/ros/humble/setup.bash
        cmake .. -DCMAKE_BUILD_TYPE=Release -DUSE_ROS2_MESSAGES=ON
        make -j$(nproc)

    - name: Build library (ROS2 disabled)
      run: |
        mkdir build-no-ros2
        cd build-no-ros2
        cmake .. -DCMAKE_BUILD_TYPE=Release -DUSE_ROS2_MESSAGES=OFF
        make -j$(nproc)

    - name: Build examples
      run: |
        cd build-ros2
        source /opt/ros/humble/setup.bash
        make basic_interpolation_example
        cd ../build-no-ros2
        make basic_interpolation_example

    - name: Build tests (skip execution)
      run: |
        cd build-ros2
        source /opt/ros/humble/setup.bash
        make -j$(nproc)
        echo "Tests built successfully (not executed due to CI environment)"
        cd ../build-no-ros2
        make -j$(nproc)
        echo "Tests built successfully (not executed due to CI environment)"

    - name: Check library files
      run: |
        echo "=== ROS2 Enabled Build ==="
        ls -la build-ros2/lib/
        ls -la build-ros2/bin/
        ls -la build-ros2/tests/ || echo "No tests directory"
        
        echo "=== ROS2 Disabled Build ==="
        ls -la build-no-ros2/lib/
        ls -la build-no-ros2/bin/
        ls -la build-no-ros2/tests/ || echo "No tests directory"
        
        echo "Build completed successfully!"

    - name: Create release package
      run: |
        pwd
        ls -la
        chmod +x create_release_package.sh
        ./create_release_package.sh

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: trajectory-interpolator-build-artifacts
        path: |
          trajectory_interpolator_*.tar.gz
          *.deb
          build-ros2/lib/
          build-ros2/bin/
          build-no-ros2/lib/
          build-no-ros2/bin/ 